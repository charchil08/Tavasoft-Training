@using CommunityInvestment.Models.ViewModels
@model SearchFilterHeaderModel;
@{
    ViewData["Title"] = "Home";
}


<div class="container-fluid custom_container">

    <header>

        <partial name="_TopHeader" />
        <hr class="m-auto" />
        @*<partial name="_SearchFilterHeader" />*@
        @Html.Partial("_SearchFilterHeader",Model)


        @*if No mssion found*@
        @*if(false)
            {
            <div class="container-fluid container-lg d-flex flex-column justify-content-center align-items-center my-4">
            <h3 class="fw-bolder">No mission found</h3>
            <button class="btn btn-outline-warning custom_btn mt-4">
            <span class="">submit new mission </span>
            &nbsp; &nbsp;
            <img src="~/assets/right-arrow.png" alt="." />
            </button>
            </div>
            }*@
    </header>
</div>


<script src="~/lib/jquery/dist/jquery.min.js"></script>
<script type="text/javascript">
        let badges = {
            themes : [],
            skills : []
        };
        
        function removeFilterBadge(badgeId) {
            debugger;
            console.log(badgeId);
            
            if(badgeId.id.startsWith("badgeTheme")) {
                let uncheckCheckbox = document.getElementById(badgeId.id.replace("badgeTheme",""));
                uncheckCheckbox.checked = false;
                badges.themes.filter(theme => theme.id !== badgeId.id)
            }
            else {
                let checkboxId = badgeId.id.replace("badgeSkill","skill-");
                let uncheckCheckbox = document.getElementsByClassName(checkboxId)[0];

                uncheckCheckbox.checked = false;
                badges.skills.filter(skill => skill.id !== badgeId.id)
            }
            
            badgeId.remove();

        }

        $(document).ready(function() {

        console.log("Hello")

        
        document.getElementById("selectCountryFilter").addEventListener('change',(e) => {
            e.preventDefault();
            console.log(e.target.value)
            debugger;
            fetchcityBasedOnCountry(e.target.value);
        });

        function fetchcityBasedOnCountry(countryId) {
            $.ajax({
                url:"Home/FetchCityBasedOnCountry",
                type:"GET",
                data: {
                    "countryId": countryId
                },
                dataType:'html',
                success:function(data) {
                    debugger;
                   $("#filteredCityList").html(data);
                },
                error : function(request,error){
                    alert("Request: "+JSON.stringify(request));
                }
            });
        }


        let themeList = [... document.querySelectorAll(".themeListClass")];
        console.log("Theme list : ", themeList);

        let skillList = [... document.querySelectorAll(".skillListClass")];
        console.log("Skill list : ", skillList);

        let removeFilterBtns=[];

        //Appending Skills and themes for badges

        themeList.forEach(function(theme, ind) {
            theme.addEventListener("change", function() {
                debugger;
                
                let indexOfCurrentBadge = -1;
                let thisId = this.id;

                badges.themes.forEach(function(t,i) {
                    if(t.id.localeCompare("badgeTheme"+thisId)==0) {
                        indexOfCurrentBadge = i;
                    }
                })

                if(!this.checked && indexOfCurrentBadge!=-1) {
                    badges.themes.splice(indexOfCurrentBadge,1);
                    document.getElementById("badgeTheme"+thisId).remove();
                }

                console.log("line 88 : " + badges);

                if(this.checked && indexOfCurrentBadge==-1) {
                    let badgeId = `badgeTheme` + thisId;
                    let removeFilterId = "remove" + badgeId;
                    badges.themes.push({id:badgeId, value:this.nextElementSibling.innerText.trim()});
                    $("#badgeWrapper").prepend(`
                        <div class="mx-2 my-1 d-flex-column flex-row align-items-center py-1 border rounded-pill px-2" id="${badgeId}" >
                            <span class="px-1 text-dark fw-bolder">${this.nextElementSibling.innerText}</span>
                            <span class="btn m-0 p-0 removeFilterX" id="${removeFilterId}" onclick=removeFilterBadge(${badgeId})  ><i class="bi bi-x"></i></span>
                       </div>
                    `);
                }
            });
        });

     

        skillList.forEach(function(skill, ind) {
            skill.addEventListener("change", function() {
                debugger;
                
                let indexOfCurrentBadge = -1;
                let thisId = this.id;

                badges.skills.forEach(function(s,i) {
                    if(s.id.localeCompare("badgeSkill"+thisId)==0) {
                        indexOfCurrentBadge = i;
                    }
                })

                if(!this.checked && indexOfCurrentBadge!=-1) {
                    badges.skills.splice(indexOfCurrentBadge,1);
                    document.getElementById("badgeSkill"+thisId).remove();
                }


                if(this.checked && indexOfCurrentBadge==-1) {
                    let badgeId = `badgeSkill` + thisId;
                    let removeFilterId = "remove" + badgeId
                    badges.skills.push({id:badgeId, value:this.nextElementSibling.innerText.trim()});
                    $("#badgeWrapper").prepend(`
                        <div class="mx-2 my-1 d-flex-column flex-row align-items-center py-1 border rounded-pill px-2" id="${badgeId}" >
                            <span class="px-1 text-dark fw-bolder">${this.nextElementSibling.innerText}</span>
                            <span class="btn m-0 p-0 removeFilterX" id="${removeFilterId}" onclick=removeFilterBadge(${badgeId})  ><i class="bi bi-x"></i></span>
                       </div>
                    `);
                }
            });
        }); 
        
        

      });
</script>
